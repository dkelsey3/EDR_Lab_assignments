# setup
library(tidyverse)
library(sf)
library(tmap)
# setup
library(tidyverse)
library(sf)
library(tmap)
# spatial
# Note, the st_make_valid() calls are NOT necessary in all cases
# But we know it's needed for the counties, and doesn't really hurt anything
# for the others
counties <- sf::read_sf("County_Boundaries.shp") %>%
sf::st_make_valid()
dams <- sf::read_sf("Dam_or_Other_Blockage_Removed_2012_2017.shp") %>%
sf::st_make_valid()
streams <- sf::read_sf("Streams_Opened_by_Dam_Removal_2012_2017.shp") %>%
sf::st_make_valid()
# aspatial
bmps <- read_csv("BMPreport2016_landbmps.csv")
# setup
library(tidyverse)
library(sf)
library(tmap)
library(stringr)
# spatial
# Note, the st_make_valid() calls are NOT necessary in all cases
# But we know it's needed for the counties, and doesn't really hurt anything
# for the others
counties <- sf::read_sf("County_Boundaries.shp") %>%
sf::st_make_valid()
dams <- sf::read_sf("Dam_or_Other_Blockage_Removed_2012_2017.shp") %>%
sf::st_make_valid()
streams <- sf::read_sf("Streams_Opened_by_Dam_Removal_2012_2017.shp") %>%
sf::st_make_valid()
# aspatial
bmps <- read_csv("BMPreport2016_landbmps.csv")
#2.3 Make a map of the counties, shading each county by the total cost of BMPs funded/implemented in that county. This will required you to join multiple datasets together
bmps
counties
tm_shape(counties) + tm_polygons(fill = "STATEFP10")
bmps$GeoNameCond <- str_sub(bmps$GeographyName, 1,2)
bmps
bmpco_joined <- full_join(bmps, counties, by = c("GeoNameCond" = "STATEFP10"))
bmpco_joined
sf::st_geometry_type(bmpco_joined)
View(counties)
#1.2 Make a scatterplot of Cost vs. TotalAmountCredited, ONLY FOR Units of type "Acres". You may need to apply a data transformation to one or more axes if the data are heavily skewed.
bmps
bmp.acres <- bmps %>% dplyr::filter(., Unit == "Acres")
bmp.acres
bmp.acres %>% ggplot(., aes(x = Cost, y = TotalAmountCredited)) +
geom_point() +
#scale_x_log10() + scale_y_log10() +
labs(y = "Total Amount Credited")
#Do both axes need a log?
#Do both axes need a log?
hist(bmp.acres$Cost)
View(bmp.acres)
hist(bmp.acres$TotalAmountCredited)
hist(log(bmp.acres$TotalAmountCredited))
bmp.acres %>% ggplot(., aes(x = Cost, y = TotalAmountCredited)) +
geom_point() +
scale_y_log10() +
labs(y = "Total Amount Credited")
bmp.acres %>% ggplot(., aes(x = Cost, y = TotalAmountCredited)) +
geom_point() +
scale_x_log10() + scale_y_log10() +
labs(y = "Total Amount Credited")
#bmpco_joined <- full_join(bmps, counties, by = c("GeoNameCond" = "STATEFP10"))
bmpco_joined <- sf:st_join(bmps, counties, by = c("GeoNameCond" = "STATEFP10"))
# spatial
# Note, the st_make_valid() calls are NOT necessary in all cases
# But we know it's needed for the counties, and doesn't really hurt anything
# for the others
counties <- sf::read_sf("County_Boundaries.shp") %>%
sf::st_make_valid()
dams <- sf::read_sf("Dam_or_Other_Blockage_Removed_2012_2017.shp") %>%
sf::st_make_valid()
streams <- sf::read_sf("Streams_Opened_by_Dam_Removal_2012_2017.shp") %>%
sf::st_make_valid()
# aspatial
bmps <- read_csv("BMPreport2016_landbmps.csv")
#bmpco_joined <- full_join(bmps, counties, by = c("GeoNameCond" = "STATEFP10"))
bmpco_joined <- sf::st_join(bmps, counties, by = c("GeoNameCond" = "STATEFP10"))
#2.3 Make a map of the counties, shading each county by the total cost of BMPs funded/implemented in that county. This will required you to join multiple datasets together
bmps
tm_shape(counties) + tm_polygons(fill = "STATEFP10")
tm_shape(counties) + tm_polygons(fill = "STATEFP10")
bmps$GeoNameCond <- str_sub(bmps$GeographyName, 1,2)
bmps
bmps
#bmpco_joined <- full_join(bmps, counties, by = c("GeoNameCond" = "STATEFP10"))
bmpco_joined <- sf::st_join(bmps, counties, by = c("GeoNameCond" = "STATEFP10"))
